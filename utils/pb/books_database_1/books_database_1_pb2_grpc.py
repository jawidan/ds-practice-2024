# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import books_database_1_pb2 as books__database__1_dot_books__database__1__pb2


class OrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOrder = channel.unary_unary(
                '/books_database_1.OrderService/CreateOrder',
                request_serializer=books__database__1_dot_books__database__1__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=books__database__1_dot_books__database__1__pb2.CreateOrderResponse.FromString,
                )
        self.PrepareOrder = channel.unary_unary(
                '/books_database_1.OrderService/PrepareOrder',
                request_serializer=books__database__1_dot_books__database__1__pb2.PrepareOrderRequest.SerializeToString,
                response_deserializer=books__database__1_dot_books__database__1__pb2.PrepareOrderResponse.FromString,
                )


class OrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrepareOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=books__database__1_dot_books__database__1__pb2.CreateOrderRequest.FromString,
                    response_serializer=books__database__1_dot_books__database__1__pb2.CreateOrderResponse.SerializeToString,
            ),
            'PrepareOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PrepareOrder,
                    request_deserializer=books__database__1_dot_books__database__1__pb2.PrepareOrderRequest.FromString,
                    response_serializer=books__database__1_dot_books__database__1__pb2.PrepareOrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'books_database_1.OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books_database_1.OrderService/CreateOrder',
            books__database__1_dot_books__database__1__pb2.CreateOrderRequest.SerializeToString,
            books__database__1_dot_books__database__1__pb2.CreateOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrepareOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books_database_1.OrderService/PrepareOrder',
            books__database__1_dot_books__database__1__pb2.PrepareOrderRequest.SerializeToString,
            books__database__1_dot_books__database__1__pb2.PrepareOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BookServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBook = channel.unary_unary(
                '/books_database_1.BookService/CreateBook',
                request_serializer=books__database__1_dot_books__database__1__pb2.CreateBookRequest.SerializeToString,
                response_deserializer=books__database__1_dot_books__database__1__pb2.CreateBookResponse.FromString,
                )
        self.GetBooks = channel.unary_unary(
                '/books_database_1.BookService/GetBooks',
                request_serializer=books__database__1_dot_books__database__1__pb2.GetBooksRequest.SerializeToString,
                response_deserializer=books__database__1_dot_books__database__1__pb2.GetBooksResponse.FromString,
                )


class BookServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBook': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBook,
                    request_deserializer=books__database__1_dot_books__database__1__pb2.CreateBookRequest.FromString,
                    response_serializer=books__database__1_dot_books__database__1__pb2.CreateBookResponse.SerializeToString,
            ),
            'GetBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBooks,
                    request_deserializer=books__database__1_dot_books__database__1__pb2.GetBooksRequest.FromString,
                    response_serializer=books__database__1_dot_books__database__1__pb2.GetBooksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'books_database_1.BookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BookService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books_database_1.BookService/CreateBook',
            books__database__1_dot_books__database__1__pb2.CreateBookRequest.SerializeToString,
            books__database__1_dot_books__database__1__pb2.CreateBookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/books_database_1.BookService/GetBooks',
            books__database__1_dot_books__database__1__pb2.GetBooksRequest.SerializeToString,
            books__database__1_dot_books__database__1__pb2.GetBooksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
